/ *!

Holder - espaços reservados de imagem do lado do cliente
Versão 2.6.0 + 51ebp
© 2015 Ivan Malopinsky - http://imsky.co

Site: http://holderjs.com
Problemas: https://github.com/imsky/holder/issues
Licença: http://opensource.org/licenses/MIT

* /
! function (a, b) {"object" == typeof exports && "object" == typeof module? module.exports = b (): "function" == typeof define && define.amd? define (b): "object" = = typeof exports? exports.Holder = b (): a.Holder = b ()} (esta função () {função de retorno (a) {função b (d) {se (c [d]) retornar c [d ] .exports; var e = c [d] = {exports: {}, id: d, loaded:! 1}; return a [d] .call (e.exports, e, e.exports, b), e .loaded =! 0, e.exports} var c = {}; return bm = a, bc = c, bp = "", b (0)} ([função (a, b, c) {(função (b ) {function d (a, b, c, d) {var g = e (c.substr (c.lastIndexOf (a.domain)), a); g && f ({mode: null, el: d, flags: g , engineSettings: b})} função e (a, b) {for (var c = {theme: y (K.settings.themes.gray, null), stylesheets: b.stylesheets, holderURL: []}, d = ! 1, e = String.fromCharCode (11), f = a.replace (/ ([^ \\]) \ // g, "$ 1" + e) ​​.split (e), g = /% [0- 9a-f] {2} /gi,h=f.length,i=0;h> i;i ++) {var j = f [i]; se (j.match (g)) tente {j = decodeURIComponent (j)} catch (k) {j = f [i]} var l =! 1; se (K .flags.dimensions.match (j)) d =! 0, c.dimensions = K.flags.dimensions.output (j), l =! 0; else if (K.flags.fluid.match (j)) d =! 0, c.dimensions = K.flags.fluid.output (j), c.fluid =! 0, l =! 0; senão se (K.flags.textmode.match (j)) c.textmode = K .flags.textmode.output (j), l =! 0; else if (K.flags.colors.match (j)) {var m = K.flags.colors.output (j); c.theme = y ( c.theme, m), l =! 0} else if (b.themes [j]) b.themes.hasOwnProperty (j) && (c.theme = y (b.themes [j], null)), l =! 0; senão se (K.flags.font.match (j)) c.font = K.flags.font.output (j), l =! 0; senão se (K.flags.auto.match (j )) c.auto =! 0, l =! 0; senão se (K.flags.text.match (j)) c.text = K.flags.text.output (j), l =! 0; else if (K.flags.size.match (j)) c.size = K.flags.size.output (j), l =! 0; else if (K.flags.random.match (j)) {null == K.vars.cache.themeKeys && (K.vars.cache.themeKeys = Object.chaves (b.themes)); var n = K.vars.cache.themeKeys [0 | Math.random () * K.vars.cache.themeKeys.length]; c.theme = y (b.themes [n] , null), l =! 0} l && c.holderURL.push (j)} retorna c.holderURL.unshift (b.domain), c.holderURL = c.holderURL.join ("/"), d? c :! 1} função f (a) {var b = a.mode, c = a.el, d = a.flags, e = a.engineSettings, f = d.dimensions, h = d.theme, i = f.width + "x" + f.height; if (b = null == b? d.fluid? "fluido": "imagem": b, null! = d.text && (h.text = d.text, "object" = == c.nodeName.toLowerCase ())) {for (var l = h.text.split ("\\ n"), m = 0; m <l.length; m ++) l [m] = A (l [m]); h.text = l.join ("\\ n")} var n = d.holderURL, o = y (e, null); se (d.font && (h.font = d.font, ! o.noFontFallback && "img" === c.nodeName.toLowerCase () && K.setup.supportsCanvas && "svg" === o.renderer && (o = y (o, {renderer: "tela "}))), d.font &&" canvas "== o.renderer && (o.reRender =! 0)," background "== b) null == c.getAttribute (" data-background-src ") && p (c, {"data-background-src": n}); else {var q = {}; q [K.vars.dataAttr] = n, p (c, q)} d.theme = h, c. holderData = {flags: d, engineSettings: o}, ("image" == b || "fluido" == b) && p (c, {alt: h.text? h.text + "[" + i + "]" : i}); var r = {mode: b, el: c, holderSettings: {dimensões: f, tema: h, flags: d}, engineSettings: o}; "image" == b? ("html"! = o.renderer && d.auto || (c.style.width = f.width + "px", c.style.height = f.height + "px"), "html" == o.renderer? c.style.backgroundColor = h.background: (g (r), "exato" == d.textmode && (c.holderData.resizeUpdate =! 0, K.vars.resizableImages.push (c), j (c)))): "background "== b && "html"! = o.renderer? g (r): "fluido" == b && (c.holderData.resizeUpdate =! 0, "%" == f.height.slice (-1)? c. style.height = f.height: null! = d.auto && d.auto || (c.style.height = f.height + "px"), "%" == f.width.slice (-1)? c. style.width = f.width: null! = d.auto && d.auto || (c.style.width = f.width + "px"), ("inline" == c.style.display || "" == = c.style.display || "none" == c.style.display) && (c.style.display = "block"), k (c), "html" == o.renderer? c.style. backgroundColor = h.background: (K.vars.resizableImages.push (c), j (c)))} função g (a) {function c () {var b = null; switch (i.renderer) {case " tela ": b = M (k, a); break; case" svg ": b = N (k, a); break; default: throw" Holder: renderizador inválido: "+ i.renderer} return b} var d = nulo, e = a.mode, f = a.holderSettings, g = a.el, i = a.engineSettings; switch (i.renderer) {case "svg": se (! K.setup.supportsSVG) retornar; quebrar; caso "tela": se (! K.setup .supportsCanvas) return; break; default: return} var j = {width: f.dimensions.width, height: f.dimensions.height, theme: f.theme, flags: f.flags}, k = h (j) ; se (d = c (), null == d) lance "Titular: não pôde colocar espaço reservado"; "background" == e? (g.style.backgroundImage = "url (" + d + ")", g .style.backgroundSize = j.width + "px" + j.height + "px") :( "img" === g.nodeName.toLowerCase ()? p (g, {src: d}): "object" = == g.nodeName.toLowerCase () && (p (g, {dados: d}), p (g, {type: "image / svg + xml"})), i.reRender && b.setTimeout (function () { var a = c (); se (null == a) lança "Holder: could not render placeholder"; "img" === g.nodeName.toLowerCase ()? p (g, {src:a}): "object" === g.nodeName.toLowerCase () && (p (g, {data: a}), p (g, {tipo: "image / svg + xml"}))}, 100 )), p (g, {"data-holder-rendered":! 0})} função h (a) {função b (a, b, c, d) {b.width = c, b.height = d a.width = Math.max (a.width, b.width), a.height + = b.height, a.add (b)} var c = K.defaults.size; switch (parseFloat (a.theme. tamanho)? c = a.theme.size: parseFloat (a.flags.size) && (c = a.flags.size), a.font = {family: a.theme.font? a.theme.font: " Arial, Helvetica, Open Sans, sans-serif ", tamanho: i (a.width, a.height, c), unidades: a.theme.units? A.theme.units: K.defaults.units, weight: a .the.fontweight? a.theme.fontweight: "bold"}, a.text = a.theme.text? a.theme.text: Math.floor (a.width) + "x" + Math.floor (a .height), a.flags.textmode) {case "literal": a.text = a.flags.dimensions.width + "x" + a.flags.dimensions.height; break; case "exato ": se (! a.flags.exactDimensions) quebrar; a.text = Math.floor (a.flags.exactDimensions.width) +" x "+ Math.floor (a.flags.exactDimensions.height)} var d = new w ({width: a.width, height: a.height}), e = d.Shape, f = new e.Rect ("holderBg", {fill: a.theme.background}); f.resize (a.width, a.height), d.root.add (f); var g = new e.Group ("holderTextGroup", {text: a.text, align: "center", fonte: a.font, preencher: a.theme.foreground}); g.moveTo (null, null, 1), d.root.add (g); var h = g.textPositionData = L (d); se (! h) lançar "Titular : restrição de teste não suportada ainda. "; g.properties.leading = h.boundingBox.height; var j = null, k = null; if (h.lineCount> 1) {var l = 0, m = 0, n = a.width * K.setup.lineWrapRatio, o = 0; k = novo e.Group ("linha" + o); para (var p = 0; p <h.words.length; p ++) {var q = h .words [p]; j = novo e.Text (q.text); var r = "\\ n" == q.text; (l + q.width> = n || r ===!0) && (b (g, k, l, g.properties.leading), l = 0, m + = g.properties.leading, o + = 1, k = novo e.Group ("linha" + o), ky = m), r! ==! 0 && (j.moveTo (l, 0), l + = h.spaceWidth + q.width, k.add (j))} b (g, k, l, g.properties). liderando), para (var s in g.children) k = g.children [s], k.moveTo ((g.width-k.width) / 2, null, null); g.moveTo ((a.width -g.width) / 2, (a.height-g.height) / 2, null), (a.height-g.height) / 2 <0 && g.moveTo (null, 0, null)} else j = new e.Text (a.text), k = novo e.Group ("line0"), k.add (j), g.add (k), g.moveTo ((a.width-h.boundingBox.width) /2,(a.height-h.boundingBox.height)/2,null);return d} função i (a, b, c) {var d = parseInt (a, 10), e = parseInt (b, 10) ), f = Math.max (d, e), g = Math.min (d, e), h = .8 * Math.min (g, f * K.defaults.scale); return Math.round (Matemática .max (c, h))} função j (a) {var b; b = null == a || null == a.nodeType? K.vars.resizableImages: [a]; para (var c = 0, d = b.length; d> c; c ++) {var e = b [c]; se (e.holderData) {var f = e.holderData.flags, h = E (e); se (h) {if (! e.holderData.resizeUpdate) continuar, se (f.fluid && f.auto) {var i = e.holderData .fluidConfig; switch (i.mode) {case "width": h.height = h.width / i.ratio; break; case "height": h.width = h.height * i.ratio}} var j = {mode: "image", holderSettings: {dimensões: h, tema: f.theme, flags: f}, el: e, engineSettings: e.holderData.engineSettings}; "exato" == f.textmode && (f.exactDimensions = h, j.holderSettings.dimensions = f.dimensions), g (j)} else n (e)}}} função k (a) {if (a.holderData) {var b = E (a); se ( b) {var c = a.holderData.flags, d = {fluidHeight: "%" == c.dimensions.height.slice (-1), fluidWidth: "%" == c.dimensions.width.slice (- 1), mode: null, initialDimensions: b}; d.fluidWidth &&! D.fluidHeight? (D.mode = "width", d.ratio = d.initialDimensions.width / parseFloat (c.dimensions.altura)) :! d.fluidWidth && d.fluidHeight && (d.mode = "height", d.ratio = parseFloat (c.dimensions.width) /d.initialDimensions.height), a.holderData.fluidConfig = d} else n ( a)}} função l () {for (var a, c = [], d = Object.keys (K.vars.invisibleImages), e = 0, f = d.length; f> e; e ++) a = K.vars.invisibleImages [d [e]], E (a) && "img" == a.nodeName.toLowerCase () && (c.push (a), exclua K.vars.invisibleImages [d [e]] ); c.length && J.run ({images: c}), b.requestAnimationFrame (l)} função m () {K.vars.visibilityCheckStarted || (b.requestAnimationFrame (l), K.vars.visibilityCheckStarted =! 0 )} função n (a) {a.holderData.invisibleId || (K.vars.invisibleId + = 1, K.vars.invisibleImages ["i" + K.vars.invisibleId] = a, a.holderData.invisibleId = K .vars.invisibleId)} função o (a, b) {return null == b? document.createElement (a): document.createElementNS (b, a)} função p (a,b) {para (var c em b) a.setAttribute (c, b [c])} função q (a, b, c) {var d, e; null == a? (a = o ("svg" , F), d = o ("defs", F), e = o ("style", F), p (e, {type: "text / css"}), d.appendChild (e), a. appendChild (d)): e = a.querySelector ("style"), a.webkitMatchesSelector && a.setAttribute ("xmlns", F); para (var f = 0; f <a.childNodes.length; f ++) a.childNodes [f] .nodeType === G && a.removeChild (a.childNodes [f]); para (; e.childNodes.length;) e.removeChild (e.childNodes [0]); return p (a, {width: b, altura: c, viewBox: "0 0" + b + "" + c, preserveAspectRatio: "none"}), a} função r (a, c) {if (b.XMLSerializer) {var d = new XMLSerializer, e = "", f = c.stylesheets; if (c.svgXMLStylesheet) {for (var g = s (), h = f.length-1; h> = 0; h -) {var i = g. createProcessingInstruction ("xml-stylesheet", 'href = "' + f [h] + '"rel = "stylesheet" '); g.insertBefore (i, g.firstChild)} var j = g.createProcessingInstruction ("xml",' version = "1.0" codificação = "UTF-8" standalone = "yes" ') ; g.insertBefore (j, g.firstChild), g.removeChild (g.documentElement), e = d.serializeToString (g)} var k = d.serializeToString (a); return k = k.replace (/ \ & amp ; (\ # [0-9] {2,} \;) / g, "& $ 1"), e + k}} função s () {return b.DOMParser? (Novo DOMParser) .parseFromString ("<xml /> "," application / xml "): void 0} função t (a) {K.vars.debounceTimer || a.call (this), K.vars.debounceTimer && b.clearTimeout (K.vars.debounceTimer), K (.v) )})} var v = c (1), w = c (2), x = c (3), y = x.extend, z = x.cssProps, A = x.encodeHtmlEntidade, B = x.decodeHtmlEntity, C = x.imageExists, D = x.getNodeArray, E = x.dimensionCheck, F = "http://www.w3.org/2000/svg", G = 8, H = "2.6.0", I = "\ NCreated with Holder.js" + H + ". \ NSaiba mais em http: //holderjs.com \ n (c) 2012-2015 Ivan Malopinsky - http: //imsky.co \ n", J = { versão: H, addTheme: função (a, b) {return null! = a && null! = b && (K.settings.themes [a] = b), exclua K.vars.cache.themeKeys, this}, addImage: function ( a, b) {var c = document.querySelectorAll (b); if (c.length) para (var d = 0, e = c.length; e> d; d ++) {var f = o ("img") g = {}; g [K.vars.dataAttr] = a, p (f, g), c [d] .appendChild (f)} retorna isso}, setResizeUpdate: function (a, b) {a.holderData && (a.holderData.resizeUpdate = !! b, a.holderData.resizeUpdate && j (a))}, execute: function (a) {a = a || {}; var c = {}, g = y (K.settings , a); K.vars.preempted =! 0, K.vars.dataAttr = g.dataAttr || K.vars.dataAttr, c.renderer = g.renderer? g.renderer: K.setup.renderer, -1 === K.setup.renderers.join (","). indexOf (c.renderer) && (c.renderer = K.setup. SuporteSVG? "svg": K.setup.supportsCanvas? "canvas": "html"); var h = D (g.images), i = D (g.bgnodes), j = D (g.stylenodes), k = D (g.objects); c.stylesheets = [], c.svgXMLStylesheet =! 0, c.noFontFallback = g.noFontFallback? G.noFontFallback:! 1; for (var l = 0; l <j.length; l ++) {var m = j [l]; se (m.attributes.rel && m.attributes.href && "stylesheet" == m.attributes.rel.value) {var n = m.attributes.href.value, p = o ("a"); p.href = n; var q = p.protocol + "//" + p.host + p.pathname + p.search; c.stylesheets.push (q)}} para (l = 0 ; l <i.length; l ++) se (b.getComputedStyle) {var r = b.getComputedStyle (i [l], null) .getPropertyValue ("background-image"), s = i [l] .getAttribute (" data-background-src "),t = null; t = null == s? r: s; var u = null, v = "?" + g.domain + "/"; se (0 === t.indexOf (v)) u = t. fatia (1); senão se (-1! = t.indexOf (v)) {var w = t.substr (t.indexOf (v)). fatia (1), x = w.match (/ ([^ \ "] *)"? \) /); null! = x && (u = x [1])} if (null! = u) {var z = e (u, g); z && f ({mode: "background ", el: i [l], flags: z, engineSettings: c})}} para (l = 0; l <k.length; l ++) {var A = k [l], B = {}; tente { B.data = A.getAttribute ("dados"), B.dataSrc = A.getAttribute (K.vars.dataAttr)} catch (E) {} var F = null! = B.data && 0 === B.data. indexOf (g.domain), G = null! = B.dataSrc && 0 === B.dataSrc.indexOf (g.domain); F? d (g, c, B.data, A): G && d (g, c, B.dataSrc, A)} para (l = 0; l <h.length; l ++) {var H = h [l], I = {}; tente {I.src = H.getAttribute ("src"), I.dataSrc = H.getAttribute (K.vars.dataAttr), I.rendered = H.getAttribute ("data-holder-rendered")} catch (E) {} var J = null! = I.src, L = nulo!= I.dataSrc && 0 === I.dataSrc.indexOf (g.domain), M = null! = I.rendered && "true" == I.rendered; J? 0 === I.src.indexOf (g.domain ) (d, g, c, e, f): L && função (a) {a || d (b, c, e, f)})} (I.src, g, c, I.dataSrc, H)): L && d (g, c, I.dataSrc, H) } retornar isto}}, K = {configurações: {domínio: "holder.js", imagens: "img", objetos: "objeto", bgnodes: "body .holderjs", stylenodes: "head link.holderjs", folhas de estilo : [], temas: {grey: {background: "# EEEEEE", primeiro plano: "# AAAAAA"}, social: {background: "# 3a5a97", primeiro plano: "# FFFFFF"}, industrial: {background: "# 434A52 ", primeiro plano:" # C2F200 "}, céu: {background:" # 0D8FDB ", primeiro plano:" # FFFFFF "}, vine: {background:" # 39DBAC ", primeiro plano:" # 1E292C "}, lava:{background: "# F8591A", primeiro plano: "# 1C2846"}}}, padrões: {tamanho: 10, unidades: "pt", escala: 1/16}, sinalizadores: {dimensões: {regex: / ^ (\ d +) x (\ d +) $ /, output: function (a) {var b = this.regex.exec (a); return {width: + b [1], height: + b [2]}}}, fluido: {regex: / ^ ([0-9] +%?) x ([0-9] +%?) $ /, saída: função (a) {var b = this.regex.exec (a); return {width: b [1], height: b [2]}}}, cores: {regex: / (?: # | \ ^) ([0-9a-f] {3,}) \ :(? : # | \ ^) ([0-9a-f] {3,}) / i, saída: função (a) {var b = this.regex.exec (a); retornar {primeiro plano: "#" + b [2], fundo: "#" + b [1]}}}, texto: {regex: / text \: (. *) /, Output: function (a) {return this.regex.exec (a) [ 1] .replace ("\\ /", "/")}}, fonte: {regex: / font \: (. *) /, Output: function (a) {return this.regex.exec (a) [ 1]}}, auto: {regex: / ^ auto $ /}, textmode: {regex: / textmode \: (. *) /, Saída: function (a) {return this.regex.exec (a) [1 ]}}, aleatório: {regex: / ^ random $ /}, tamanho:{regex: / size \: (\ d +) /, output: function (a) {return this.regex.exec (a) [1]}}}}}, L = function () {var a = null, b = null, c = null; função de retorno (d) {var e = d.root; if (K.setup.supportsSVG) {var f =! 1, g = função (a) {return document.createTextNode (a)}; (null == a || a.parentNode! == document.body) && (f =! 0), a = q (a, e.properties.width, e.properties.height), a.style.display = "bloco", f && (b = o ("texto", F), c = g (nulo), p (b, {x: 0}), b.appendChild (c), a.appendChild (b), documento .body.appendChild (a), a.style.visibility = "hidden", a.style.position = "absolute", a.style.top = "- 100%", a.style.left = "- 100% "); var h = e.children.holderTextGroup, i = h.properties; p (b, {y: i.font.size, style: z ({" font-weight ": i.font.weight", fonte -size ": i.font.size + i.font.units," font-family ": i.font.family})}), c.nodeValue = i.text; var j = b.getBBox (),k = Math.ceil (j.width / (e.properties.width * K.setup.lineWrapRatio)), l = i.text.split (""), m = i.text.match (/ \\ n / g); k + = null == m? 0: m.length, c.nodeValue = i.text.replace (/ [] + / g, ""); var n = b.getComputedTextLength (), r = j. width-n, s = Math.round (r / Math.max (1, l.length-1)), t = []; se (k> 1) {c.nodeValue = ""; para (var u = 0; u <l.length; u ++) se (0! == l [u] .length) {c.nodeValue = B (l [u]); var v = b.getBBox (); t.push ({ texto: l [u], largura: v.width})}} return a.style.display = "none", {spaceWidth: s, lineCount: k, boundingBox: j, palavras: t}} return! 1}} (), M = função () {var a = o ("canvas"), b = nulo; função de retorno (c) {null == b && (b = a.getContext ("2d")) var d = c .root; a.width = K.dpr (d.properties.width), a.height = K.dpr (d.properties.height), b.textBaseline = "middle", b.fillStyle = d.children.holderBg .properties.fill, b.fillRect (0,0, K.dpr (d.children.holderBg.largura), K.dpr (d.children.holderBg.height)); {var e = d.children.holderTextGroup; e.properties} b.font = e.properties.font.weight + "" + K.dpr (e .properties.font.size) + e.properties.font.units + "" + e.properties.font.family + ", monospace", b.fillStyle = e.properties.fill; para (var f in e.children) { var g = e.children [f]; para (var h in g.children) {var i = g.children [h], j = K.dpr (e.x + g.x + ix), k = K .dpr (e.y + g.y + i.y + e.properties.leading / 2); b.fillText (i.properties.text, j, k)}} retorna a.toDataURL ("imagem / png" )}} (), N = função () {if (b.XMLSerializer) {var a = s (), c = q (null, 0,0), d = o ("rect", F); return c .appendChild (d), função (b, e) {var f = b.root; q (c, f.properties.width, f.properties.height); para (var g = c.querySelectorAll ("g") h = 0; h <g.length; h ++) g [h] .parentNode.removeChild (g [h]); var i = e.holderSettings.flags.holderURL, j = "holder_"+ (Número (nova data) +32768+ (0 | 32768 * Math.random ())) toString (16), k = o ("g", F), l = f.children.holderTextGroup, m = l .properties, n = o ("g", F), s = l.textPositionData, t = "#" + j + "texto {" + z ({preencher: m.fill, "font-weight": m.font .weight, "font-family": m.font.family + ", monospace", "font-size": m.font.size + m.font.units}) + "}", u = a.createComment (" \ nO URL de Origem: "+ i + I), v = a.createCDATASection (t), w = c.querySelector (" style "); p (k, {id: j}), c.insertBefore (u, c. firstChild), w.appendChild (v), k.appendChild (d), k.appendChild (n), c.appendChild (k), p (d, {width: f.children.holderBg.width, height: f. children.holderBg.height, fill: f.children.holderBg.properties.fill}), l.y + =. 8 * s.boundingBox.height; para (var x in l.children) {var y = l.children [ x]; para (var A in y.children) {var B = y.children [A], C = l.x + y.x + Bx,D = l.y + y.y + By, E = o ("text", F), G = document.createTextNode (null); p (E, {x: C, y: D}), G.nodeValue = B.properties.text, E.appendChild (G), n.appendChild (E)}} var H = "dados: image / svg + xml; base64," + btoa (unescape (encodeURIComponent (r (c, e. engineSettings)))); retornar H}}} (); para (var O em K.flags) K.flags.hasOwnProperty (O) && (K.flags [O] .match = função (a) {retornar a. match (this.regex)}); K.setup = {renderer: "html", debounce: 100, ratio: 1, supportCanvas:! 1, supportSVG:! 1, lineWrapRatio: .9, renderers: ["html", "canvas", "svg"]}, K.dpr = função (a) {return a * K.setup.ratio}, K.vars = {preempted:! 1, resizableImages: [], invisibleImages: {}, invisibleId : 0, visibilityCheckStarted:! 1, debounceTimer: null, cache: {}, dataAttr: "data-src"}, função () {var a = 1, c = 1, d = o ("canvas"), e = null; d.getContext && - 1! = d.toDataURL ("image / png "). indexOf (" dados: imagem / png ") && (K.setup.renderer =" canvas ", e = d.getContext (" 2d "), K.setup.supportsCanvas =! 0), K .setup.supportsCanvas && (a = b.devicePixelRatio || 1, c = e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1), K.setup.ratio = A / c, document.createElementNS && document.createElementNS (F, "svg"). createSVGRect && (K.setup.renderer = "svg", K.setup.supportsSVG =! 0)} (), m (), v && v (função ( ) {K.vars.preempted || J.run (), b.addEventListener? (B.addEventListener ("redimensionar", u,! 1), b.addEventListener ("orientationchange", u,! 1)): b .attachEvent ("onresize", u), "object" == typeof b.Turbolinks && b.document.addEventListener ("page: change",função () {jrun ()})}), a.exports = J}). call (b, function () {return this} ())}, function (a) {function b (a) {function b (a) {if (! v) {if (! g.body) retorna e (b); para (v =! 0; a = w.shift ();) e (a)}} função c (a ) {(t || a.type === i || g [m] === l) && (d (), b ())} função d () {t? (g [s] (q, c, j), a [s] (i, c, j)) :( g [o] (r, c), a [o] (k, c))} função e (a, b) {setTimeout ( a, + b> = 0? b: 1)} função f (a) {v? e (a): w.push (a)} null == document.readyState && document.addEventListener && (document.addEventListener ("DOMContentLoaded", função y () {document.removeEventListener ("DOMContentLoaded", y,! 1), document.readyState = "complete"} ,! 1), document.readyState = "carregar"); var g = a.document, h = g.documentElement, i = "load", j =! 1, k = "on" + i, l = "complete", m = "readyState", n = "attachEvent", o = "detachEvent", p = "addEventListener ", q =" DOMContentLoaded ", r =" onreadystatechange ", s =" removeEventListener ", t = p em g, u = j, v = j, w = []; se (g [m] === l ) e (b); senão se (t) g [p] (q, c, j), a [p] (i, c, j); else {g [n] (r, c), a [n ] (k, c); tente {u = null == a.frameElement && h} catch (x) {} u && u.doScroll &&! function z () {if (! v) {try {u.doScroll ("left")} catch (a) {return e (z, 50)} d (), b ()}} ()} return f.version = "1.4.0", f.isReady = function () {return v}, f} a.exports = "indefinido"! = tipo de janela && b (janela)}, função (a, b, c) {var d = c (4), e = função (a) {função b (a, b) {para ( var c em b) a [c] = b [c]; return a} var c = 1, e = d.defclass ({constructor: function (a) {c ++, this.parent = null, this.children = { }, this.id = c, this.name = "n" + c, null! = a && (this.name = a), this.x = 0, this.y = 0, this.z = 0, isto. width = 0, this.height = 0}, redimensionar: function (a, b) {null! = a &&(this.x = null! = a? a: this.x, this.y = null! = b? b: this.y, this.z = null! = c? c: this.z}, add: function (a) {var b = a.name; if (null! = this.children [b]) lance "SceneGraph: filho com esse nome já existe:" + b; this.children [b] = a, a.parent = this}}), f = d (e, função (b) {this. constructor = function () {b.constructor.call (this, "root"), this.properties = a}}), g = d (e, function (a) {function c (c, d) {if (a .constructor.call (this, c), this.properties = {fill: "# 000"}, null! = d) b (this.properties, d); else if (null! = c && "string"! = typeof c) lança "SceneGraph: nome do nó inválido"} this.Group = d.extend (this, {constructor: c, type: "group"}), this.Rect = d.extend (this, {constructor: c, type : "rect"}), this.Text = d.extend (isto, {constructor: function (a) {c.call (this), this.properties.text = a}, digite: "text"})}), h = new f; return this.Shape = g, this.root = h, this}; a.exports = e}, function (a, b) { (função (a) {b.extend = função (a, b) {var c = {}; para (var d em a) a.hasOwnProperty (d) && (c [d] = a [d]); se (null! = b) para (var e in b) b.hasOwnProperty (e) && (c [e] = b [e]); return c}, b.cssProps = função (a) {var b = [] ; para (var c em a) a.hasOwnProperty (c) && b.push (c + ":" + a [c]); return b.join (";")}, b.encodeHtmlEntity = função (a) {para (var b = [], c = 0, d = a.length-1; d> = 0; d -) c = a.charCodeAt (d), b.unshift (c> 128? ["& #" , c, ";"]. juntar (""): a [d]); return b.join ("")}, b.getNodeArray = função (b) {var c = null; return "string" == typeof b? c = document.querySelectorAll (b): a.NodeList && b instanceof a.NodeList? c = b: a.Node && b instanceof a.Node? c = [b]: a.HTMLCollection && b instanceof a.HTMLCollection? C = b: b instanceof Array? C = b: null === b && (c = []), c}, b.imageExists = função (a, b) {var c = new Image; c.onerror = function () {b.call (this,! 1)}, c.onload = function () {b.call (this,! 0)}, c.src = a}, b.decodeHtmlEntity = função (a) { retornar a.replace (/ & # (\ d +); / g, função (a, b) {return String.fromCharCode (b)})}, b.dimensionCheck = função (a) {var b = {height: a .clientHeight, width: a.clientWidth}; return b.height && b.width? b:! 1}}). call (b, function () {return this} ())}, função (a) {var b = function () {}, c = Array.prototype.slice, d = função (a, d) {var e = b.prototype = "function" == typeof a? prototype: a, f = new b, g = d.apply (f, c.call (argumentos, 2) .concat (e)); se ("objeto" == tipoof g) para (var h em g) f [h] = g [h]; se ( ! f.hasOwnProperty ("constructor")) return f; var i = f.constructor; return i.prototype = f, i}; d.defclass = function (a) {var b = a.constructor; return b.protótipo = a, b}, d.extend = função (a, b) {return d (a, função (a) {return this.uber = a, b})}, a.exports = d}])}) ;